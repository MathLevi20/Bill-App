declare module 'react-datepicker' {
  import React from 'react';
  export function registerLocale(localeName: string, localeData: object): void;

  export interface ReactDatePickerProps {
    adjustDateOnChange?: boolean;
    allowSameDay?: boolean;
    autoComplete?: string;
    autoFocus?: boolean;
    calendarClassName?: string;
    calendarContainer?: React.ReactNode;
    children?: React.ReactNode;
    className?: string;
    clearButtonTitle?: string;
    customInput?: React.ReactNode;
    customInputRef?: string;
    dateFormat?: string | string[];
    dateFormatCalendar?: string;
    
    dayClassName?: (date: Date) => string | null;
    disabled?: boolean;
    disabledKeyboardNavigation?: boolean;
    dropdownMode?: 'scroll' | 'select';
    endDate?: Date | null;
    excludeDates?: Date[];
    filterDate?: (date: Date) => boolean;
    fixedHeight?: boolean;
    formatWeekNumber?: (date: Date) => string | number;
    highlightDates?: Array<Date | { [className: string]: Date[] }>;
    id?: string;
    inline?: boolean;
    isClearable?: boolean;
    locale?: string;
    maxDate?: Date;
    maxTime?: Date;
    minDate?: Date;
    minTime?: Date;
    monthsShown?: number;
    name?: string;
    onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;
    onChange: (date: Date | null, event?: React.SyntheticEvent<any>) => void;
    onChangeRaw?: (event: React.FocusEvent<HTMLInputElement>) => void;
    onClickOutside?: (event: React.MouseEvent<HTMLDivElement>) => void;
    onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;
    onKeyDown?: (event: React.KeyboardEvent<HTMLDivElement>) => void;
    onMonthChange?: (date: Date) => void;
    onSelect?: (date: Date, event: React.SyntheticEvent<any>) => void;
    onWeekSelect?: (firstDayOfWeek: Date, weekNumber: string | number, event: React.SyntheticEvent<any>) => void;
    onYearChange?: (date: Date) => void;
    openToDate?: Date;
    peekNextMonth?: boolean;
    placeholderText?: string;
    popperClassName?: string;
    popperContainer?: React.ReactNode;
    popperModifiers?: any;
    popperPlacement?: string;
    preventOpenOnFocus?: boolean;
    readOnly?: boolean;
    required?: boolean;
    scrollableMonthYearDropdown?: boolean;
    scrollableYearDropdown?: boolean;
    selected?: Date | null;
    selectsEnd?: boolean;
    selectsStart?: boolean;
    shouldCloseOnSelect?: boolean;
    showDisabledMonthNavigation?: boolean;
    showMonthDropdown?: boolean;
    showMonthYearDropdown?: boolean;
    showTimeSelect?: boolean;
    showTimeSelectOnly?: boolean;
    showWeekNumbers?: boolean;
    showYearDropdown?: boolean;
    startDate?: Date | null;
    startOpen?: boolean;
    tabIndex?: number;
    timeCaption?: string;
    timeFormat?: string;
    timeIntervals?: number;
    title?: string;
    todayButton?: React.ReactNode;
    useShortMonthInDropdown?: boolean;
    useWeekdaysShort?: boolean;
    value?: string;
    weekLabel?: string;
    withPortal?: boolean;
    yearDropdownItemNumber?: number;
  }

  const DatePicker: React.FC<ReactDatePickerProps>;
  export default DatePicker;
}
